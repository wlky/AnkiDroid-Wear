apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
//
//    defaultConfig {
//        applicationId "com.yannik.ankidroid_wear"
//        minSdkVersion 18
//        targetSdkVersion 22
//        versionCode 10300106
//        versionName "1.3alpha6"
//    }
    buildTypes {
        release {
            minifyEnabled false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'MissingTranslation'
    }

    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        def value = 0
        def runTasks = gradle.startParameter.taskNames
        if ('assemble' in runTasks || ':mobile:assembleRelease' in runTasks || 'aR' in runTasks) {
            value = 1
        }

        def versionMajor = 1
        def versionMinor = 0
        def versionPatch = versionProps['VERSION_PATCH'].toInteger() + value
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + value
        def version_Code = versionProps['VERSION_CODE'].toInteger() + value

        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps['VERSION_CODE'] = version_Code.toString()

        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            versionCode version_Code
            versionName "${versionMajor}.${versionMinor}.alpha${versionBuild}"
            applicationId "com.yannik.wear.anki"
            minSdkVersion 18
            targetSdkVersion 28
        }
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }


    applicationVariants.all { variant ->
        variant.outputs.all {
            def flavor = variant.name
            def versionName = variant.versionName
            outputFileName = "prefix_${flavor}_${versionName}.apk"
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    wearApp project(':wear')
    implementation project (':sharedvalues')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    // Using a subset of play services, as suggested by google/Lint
    implementation 'com.google.android.gms:play-services-wearable:10.2.1'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.jakewharton.timber:timber:2.5.1'
    // API which can be used to add and query notes,cards,decks, and models to AnkiDroid
    // See https://github.com/ankidroid/Anki-Android/wiki/AnkiDroid-API
    // Available on Jcenter
    implementation 'com.ichi2.anki:api:1.1.0alpha5'
    implementation 'com.android.support:multidex:1.0.3'
}
